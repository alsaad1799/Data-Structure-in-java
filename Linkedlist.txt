/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;



class Node {
    int data;
    Node next;
}

class Linkedlist{
    Node head;
    Node tail;
    int size;
    
       void addLast(int val){
       Node newNode = new Node();
       newNode.data = val;
       newNode.next = null;
       
       if(size == 0){
           head = tail = newNode;
       }
       else{
           tail.next = newNode;
           tail = newNode;
       }
       size++;
    }
    
        void addFirst(int val){
            Node newNode = new Node();
            newNode.data = val;
            newNode.next = null;
            
            if(size == 0){
                head = tail = newNode;
            }
            else{
                
              newNode.next = head;
              head = newNode;
                
            }   
            size++;
        }
        
        void add(int index , int val){
          Node newNode = new Node();
            newNode.data = val;
            newNode.next = null;
            if(index < 0 || index > size){
              System.out.println("invalid index");
            }
            else if(index == 0){
                addFirst(val);
            }
            else if(index == size){
                addLast(val);
            }
            else{
                Node temp = head;
                for(int i = 0 ; i < index - 1 ; i++){
                   temp = temp.next; 
                }
              newNode.next = temp.next;
              temp.next = newNode;
                size++;
            }   
              
        }
        
        void removeFirst(){
           
            if(size == 0){
                System.out.println("underflow");
            }
            else{
            head = head.next;
            size--;}
        }
        void removeLast(){
            if(size == 0){
                System.out.println("underflow");
            }
            else{
            Node temp = head;
            while(temp.next.next != null){
                temp = temp.next;
            }
            temp.next = null;
            temp = tail;
            size--;}
        }
        void remove(int index){
            if(size == 0 ){
                System.out.println("underflow");
            }
            else if(index < 0 || index >= size){
                System.out.println("invalid");
            }
            else if(index == 0 ){
                removeFirst();
            }
            else if(index == size - 1){
                removeLast();
            }
            else{
                Node temp = head;
                for(int i = 0 ; i < index-1 ; i++){
                    temp = temp.next;
                }
                
                temp.next = temp.next.next;
                size--;
                
            }
        }
        
        void search (int val){
           Node temp = head;
        while(temp != null){
            if(temp.data == val){
            System.out.print(temp.data + " Found");
                break;
            }
            temp = temp.next;
        }System.out.println();
        }
        
        int size(){
            System.out.println("Size : " + size);
            return size;
        }
    void display(){
        Node temp = head;
        while(temp != null){
            System.out.print(temp.data + " -> ");
            temp = temp.next;
        }System.out.println();
    }
}



/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		// your code goes here
		Linkedlist ll = new Linkedlist();
		ll.addLast(10);
		ll.addLast(20);
		ll.addLast(30);
		ll.addLast(50);
		ll.add(3,40);
		ll.addFirst(-10);
		ll.addFirst(-20);
		ll.addFirst(-30);
	   
	ll.add(-1,40);
	ll.add(9,40);
	 
	 ll.removeFirst();
	 ll.removeLast();
	 ll.remove(3);
	 ll.search(10);
	 ll.size();
		ll.display();
	}
}
